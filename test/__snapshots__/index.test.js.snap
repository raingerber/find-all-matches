// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`findMatches should find matches for multiple root elements 1`] = `
Array [
  Object {
    "children": Array [],
    "matches": Array [],
  },
  Object {
    "children": Array [],
    "matches": Array [
      Object {
        "selector": ".b",
      },
      Object {
        "selector": "div + div",
      },
    ],
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "matches": Array [],
      },
    ],
    "matches": Array [
      Object {
        "selector": ".c",
      },
      Object {
        "selector": "div + div",
      },
    ],
  },
]
`;

exports[`findMatches should ignore partial matches when options.includePartialMatches is false 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "matches": Array [
        Object {
          "selector": "???div???",
        },
        Object {
          "selector": "???div > div???",
        },
      ],
    },
  ],
  "matches": Array [
    Object {
      "selector": "???div???",
    },
  ],
}
`;

exports[`findMatches should include css arrays when option.includeCss is true 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "matches": Array [
        Object {
          "css": Array [
            "color: red",
          ],
          "isPartialMatch": false,
          "selector": "div",
        },
        Object {
          "css": Array [
            "color: blue",
          ],
          "isPartialMatch": false,
          "selector": "div > div",
        },
        Object {
          "css": Array [
            "color: green",
          ],
          "isPartialMatch": true,
          "selector": "div > div > div",
        },
      ],
    },
  ],
  "matches": Array [
    Object {
      "css": Array [
        "color: red",
      ],
      "isPartialMatch": false,
      "selector": "div",
    },
    Object {
      "css": Array [
        "color: blue",
      ],
      "isPartialMatch": true,
      "selector": "div > div",
    },
    Object {
      "css": Array [
        "color: green",
      ],
      "isPartialMatch": true,
      "selector": "div > div > div",
    },
  ],
}
`;

exports[`findMatches should include partial matches when options.includePartialMatches is true 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "matches": Array [
        Object {
          "isPartialMatch": false,
          "selector": "???div???",
        },
        Object {
          "isPartialMatch": false,
          "selector": "???div > div???",
        },
        Object {
          "isPartialMatch": true,
          "selector": "div > ???div > div???",
        },
      ],
    },
  ],
  "matches": Array [
    Object {
      "isPartialMatch": false,
      "selector": "???div???",
    },
    Object {
      "isPartialMatch": true,
      "selector": "div > ???div???",
    },
    Object {
      "isPartialMatch": true,
      "selector": "div > div > ???div???",
    },
  ],
}
`;

exports[`findMatches should work for a complex bit of html and css 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "matches": Array [
                Object {
                  "isPartialMatch": true,
                  "media": "(max-width: 500px)",
                  "selector": ".class1 > .class2 > ???section > div > * > li:first-of-type???",
                },
                Object {
                  "isPartialMatch": true,
                  "media": "(max-width: 500px)",
                  "selector": ".class1 > class2 ???li:first-of-type???",
                },
              ],
            },
            Object {
              "children": Array [],
              "matches": Array [
                Object {
                  "isPartialMatch": true,
                  "selector": "html.namaste ???li:first-of-type ~ li???",
                },
              ],
            },
            Object {
              "children": Array [],
              "matches": Array [
                Object {
                  "isPartialMatch": true,
                  "selector": "html.namaste ???li:first-of-type ~ li???",
                },
              ],
            },
          ],
          "matches": Array [
            Object {
              "isPartialMatch": false,
              "selector": "???.container???",
            },
          ],
        },
      ],
      "matches": Array [],
    },
  ],
  "matches": Array [
    Object {
      "isPartialMatch": false,
      "selector": "???.container???",
    },
    Object {
      "isPartialMatch": true,
      "selector": ".sibling ~ ???section???",
    },
    Object {
      "isPartialMatch": true,
      "media": "(max-width: 1000px)",
      "selector": "div[data-gloop=\\"true\\"] > ???*???",
    },
  ],
}
`;

exports[`findMatchesFactory throws when findMatches(...) is called after findMatches.close() 1`] = `[Error: Unable to call findMatches(...) after findMatches.close()]`;
